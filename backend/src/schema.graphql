type Query {
  users(token: String!): User!
  allEvents: [Event!]!
  event(eventname: String!): Event!
}

type Mutation {
  login(username: String!, passwd: String!): String!
  register(username: String!, passwd: String!, identity: String!): User!
  logout(username: String!): User!
  event(
    eventname: String!
    hostname: String!
    eventdatefrom: String!
    eventdateto: String!
    tags: [String!]
    description: String!
  ): Event!
  addtoEventlist(username: String!, eventname: String!): String
}

type User {
  id: ID
  username: String!
  identity: String
  events: [Event]
  isLoggedIn: Boolean
}

type Event {
  eventname: String
  hostname: String
  eventdatefrom: String
  eventdateto: String
  tags: [String]
  description: String
  imageURL: String
  maxparticipants: Int

  participants: [String]
  rating: Float
  comments: [Comment]
  onclicks: Int

  verified: Boolean
  trending: Boolean
}

type Comment {
  sender: String!
  body: String!
}
